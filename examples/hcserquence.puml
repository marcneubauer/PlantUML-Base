# PlantUMLs
@startuml
```
@startuml
    'https://plantuml.com/sequence-diagram
    !include https://raw.githubusercontent.com/bschwarz/puml-themes/master/themes/bluegray/puml-theme-bluegray.puml
'!includeurl https://raw.githubusercontent.com/matthewjosephtaylor/plantuml-style/master/style.pu
'!include https://raw.githubusercontent.com/bschwarz/puml-themes/master/themes/superhero/puml-theme-superhero.puml
'
    'skinparam responseMessageBelowArrow true
    skinparam backgroundColor #FFFFFE
    skinparam ArrowColor #darkgreen
    skinparam SequenceGroupBodyBackGroundColor transparent

    actor Browser as browser #green
    box Netlify
'    box Netlify : <img:https://www.netlify.com/img/press/logos/full-logo-light.png{scale=0.1}>
        participant backend as "AWS\nƛ"
    end box
    box WorldPay
'    box WorldPay: <img:https://www.salesforce.com/content/dam/web/en_us/www/images/commerce-cloud/partners/worldpay-logo-2.png>
        participant epro as "eProtect"
        participant cnp as "cnpApi"
    end box
    participant BMI as oms
    participant epcc as "EPCC"

    autonumber


|||
== Navigate to Checkout Form ==
    browser -> epcc: Automatically Create Cart and Add Offer Items to Cart.
    'note left of epcc: EPCC: Cart created.
    activate browser #lightgray
    activate epcc #lightblue
    epcc -> browser : {cart_reference_id}
    deactivate epcc


|||
    group EPCC Cart Interaction Details
        browser --> epcc : Create and Add Offer Items to Cart.
        activate epcc #lightblue
        group Responses  [error]
            epcc -[#f07575]> browser: Error Creating/Adding To Cart
        else success
            epcc -> browser: {cart_reference_id}
            deactivate epcc
        end
    end


|||
== Enter CC#, CVV into Checkout Form ==
    browser o-> epro : Tokenize PCI Data
    activate epro #black
    epro -> browser : {RegistrationId}
    note right #gray: RegistrationId is a long length, low-value token,\n MOD10+1 compliant, with no format preservation,\nand a 24 hour lifetime.
    deactivate epro

    group eProtect Details
        note right of browser: { cart_reference_id, CC#, CVV }
        browser -> epro : Tokenize PCI Data
        activate epro #black
        group Responses [error]
            epro -[#f07575]> browser : {response.code, response.message}
            note right #gray: Error Messages shown near iFrame fields.
        else success
            epro -> browser : {paypageRegistrationId, response.expMonth, response.expYear, response.type}
            deactivate epro
            note right #gray: paypageRegistrationId is a long length,\nlow-value token, MOD10+1 compliant,\nwith no format preservation, and a 24h life.
        end
    end


|||
== Click "Place Order" ==
    'browser -->o epcc : Set Shipping/Billing Information
    'note left of epcc: EPCC order status: processing
    browser o-> backend : Place Order.
    activate backend #00ac99

    group Place Order Details
       note right of browser: { Addresses, Consents, cart_reference_id, Authorization }

        browser -> backend : Place Order: <b>POST /.netlify/functions/placeOrder</b>
        group Responses [error]
            backend -[#f07575]> browser: HTTP: <b>500</b> Error.
            note right #gray: Error Message\nError Code
        else success
            backend -> browser : HTTP: <b>201</b> Order Created.
            note right #gray: Order Id
        end
    end



   backend -> epcc : Convert Cart to Order.
    'note  left of epcc: EPCC Order status: incomplete
    activate epcc #lightblue
    epcc -> backend : {Order Id}
    deactivate epcc

    group EPCC Order Create Details
        backend --> epcc : Convert Cart to Order
        activate epcc #lightblue
        group Responses  [error]
            epcc -[#f07575]> backend: Error Converting Cart to Order
        else success
            epcc -> backend: {Order Id}
            deactivate epcc
        end
    end

|||
== Payment Authorization ==
    backend -> cnp : WorldPay cnpApi: Authorize this order.
    activate cnp #fceca2
    cnp -> backend : {OmniToken, Authorization}
    note right #gray:  High-value token, reusable.\nAuthorization good for 7-10days
    deactivate cnp

    group cnpApi Details
    note right of backend: { RegistrationID, Address(es), CC Expiration, Amount }
    backend -> cnp : WorldPay cnpApi: Authorize this order. (via OpenAccess)
        group Responses [error]
            activate cnp #fceca2
            cnp -[#f07575]> backend : Payment Error {Error Code/Message?}
'            note right #gray: Error Code?
        else success
            cnp -> backend : {response, message, authCode, cnpToken}
'            note right: OmniToken, Authorization
            deactivate cnp
        end
    end


|||
== Fulfillment ==
    backend -> oms : BMI API: NEWORDER
    activate oms #lightgreen
    oms -> backend : {BMI OrderNumber}
    deactivate oms

    group BMI Details
        note right of backend: { OmniToken, Address(es), OfferCode, KeyCode, Totals, Consents }
        backend -> oms : Call BMI API: NEWORDER
        group Responses [error]
            activate oms #lightgreen
            oms -[#f07575]> backend : {ErrorCode, ErrorText}
'            note right: {\nErrorCode,\nErrorText \n}
        else success
            oms -> backend : {Status, OrderNumber, Payment, SalesTax}
            deactivate oms
        end
    end


|||
== EPCC ==
    backend -> epcc : EPCC: Update Order Details.
    activate epcc #lightblue
'    note left: {\n  BMI Order_Id, Omni_Token \n Offer Code, Source Code,\n Consents, Address(es)\n}
'    note left of epcc: Order Status: complete

    epcc -> backend : Success.
    deactivate epcc

    group EPCC Backend Interaction Details
        note right of backend: { Addresses, Consents, BMI Order_ID, Authorization }
        backend -> epcc : EPCC: Update Order Details.
        activate epcc #lightblue
        group Responses  [error]
            epcc -[#f07575]> backend: Error Updating Order
            activate backend #f07575
'            backend --[#f07575]> backend: Continue Process.
            deactivate backend
        else success
            epcc -> backend: Success.
            deactivate epcc
            activate backend #darkgreen
'            backend --[#darkgreen]> backend: Continue Process.
            deactivate backend
        end
    end

    backend ->o browser : Success.
    deactivate backend
    browser -> browser : Order success page.
    deactivate browser

@enduml


---
@startuml
    'https://plantuml.com/sequence-diagram
    !include https://raw.githubusercontent.com/bschwarz/puml-themes/master/themes/bluegray/puml-theme-bluegray.puml
'!includeurl https://raw.githubusercontent.com/matthewjosephtaylor/plantuml-style/master/style.pu
'!include https://raw.githubusercontent.com/bschwarz/puml-themes/master/themes/superhero/puml-theme-superhero.puml
'
    'skinparam responseMessageBelowArrow true
    skinparam backgroundColor #FFFFFE
    skinparam ArrowColor #darkgreen
    skinparam SequenceGroupBodyBackGroundColor transparent

    actor Browser as browser #green
    box Netlify
'    box Netlify : <img:https://www.netlify.com/img/press/logos/full-logo-light.png{scale=0.1}>
        participant backend as "AWS\nƛ"
    end box
    box WorldPay
'    box WorldPay: <img:https://www.salesforce.com/content/dam/web/en_us/www/images/commerce-cloud/partners/worldpay-logo-2.png>
        participant epro as "eProtect"
        participant cnp as "cnpApi"
    end box
    participant BMI as oms
    participant epcc as "EPCC"

    autonumber


|||
== Navigate to Checkout Form ==
    browser -> epcc: Automatically Create Cart and Add Offer Items to Cart.
    'note left of epcc: EPCC: Cart created.
    activate browser #lightgray
    activate epcc #lightblue
    epcc -> browser : {cart_reference_id}
    deactivate epcc


|||
'    group EPCC Cart Interaction Details
'        browser --> epcc : Create and Add Offer Items to Cart.
'        activate epcc #lightblue
'        group Responses  [error]
'            epcc -[#f07575]> browser: Error Creating/Adding To Cart
'        else success
'            epcc -> browser: {cart_reference_id}
'            deactivate epcc
'        end
'    end


|||
== Enter CC#, CVV into Checkout Form ==
    browser o-> epro : Tokenize PCI Data
    activate epro #black
    epro -> browser : {RegistrationId}
    note right #gray: RegistrationId is a long length, low-value token,\n MOD10+1 compliant, with no format preservation,\nand a 24 hour lifetime.
    deactivate epro

'    group eProtect Details
'        note right of browser: { cart_reference_id, CC#, CVV }
'        browser -> epro : Tokenize PCI Data
'        activate epro #black
'        group Responses [error]
'            epro -[#f07575]> browser : {response.code, response.message}
'            note right #gray: Error Messages shown near iFrame fields.
'        else success
'            epro -> browser : {paypageRegistrationId, response.expMonth, response.expYear, response.type}
'            deactivate epro
'            note right #gray: paypageRegistrationId is a long length,\nlow-value token, MOD10+1 compliant,\nwith no format preservation, and a 24h life.
'        end
'    end


|||
== Click "Place Order" ==
    'browser -->o epcc : Set Shipping/Billing Information
    'note left of epcc: EPCC order status: processing
    browser o-> backend : Place Order.
    activate backend #00ac99

'    group Place Order Details
'       note right of browser: { Addresses, Consents, cart_reference_id, Authorization }
'
'        browser -> backend : Place Order: <b>POST /.netlify/functions/placeOrder</b>
'        group Responses [error]
'            backend -[#f07575]> browser: HTTP: <b>500</b> Error.
'            note right #gray: Error Message\nError Code
'        else success
'            backend -> browser : HTTP: <b>201</b> Order Created.
'            note right #gray: Order Id
'        end
'    end



   backend -> epcc : Convert Cart to Order.
    'note  left of epcc: EPCC Order status: incomplete
    activate epcc #lightblue
    epcc -> backend : {Order Id}
    deactivate epcc

'    group EPCC Order Create Details
'        backend --> epcc : Convert Cart to Order
'        activate epcc #lightblue
'        group Responses  [error]
'            epcc -[#f07575]> backend: Error Converting Cart to Order
'        else success
'            epcc -> backend: {Order Id}
'            deactivate epcc
'        end
'    end

|||
== Payment Authorization ==
    backend -> cnp : WorldPay cnpApi: Authorize this order.
    activate cnp #fceca2
    cnp -> backend : {OmniToken, Authorization}
    note right #gray:  High-value token, reusable.\nAuthorization good for 7-10days
    deactivate cnp

'    group cnpApi Details
'    note right of backend: { RegistrationID, Address(es), CC Expiration, Amount }
'    backend -> cnp : WorldPay cnpApi: Authorize this order. (via OpenAccess)
'        group Responses [error]
'            activate cnp #fceca2
'            cnp -[#f07575]> backend : Payment Error {Error Code/Message?}
''            note right #gray: Error Code?
'        else success
'            cnp -> backend : {response, message, authCode, cnpToken}
''            note right: OmniToken, Authorization
'            deactivate cnp
'        end
'    end


|||
== Fulfillment ==
    backend -> oms : BMI API: NEWORDER
    activate oms #lightgreen
    oms -> backend : {BMI OrderNumber}
    deactivate oms

'    group BMI Details
'        note right of backend: { OmniToken, Address(es), OfferCode, KeyCode, Totals, Consents }
'        backend -> oms : Call BMI API: NEWORDER
'        group Responses [error]
'            activate oms #lightgreen
'            oms -[#f07575]> backend : {ErrorCode, ErrorText}
''            note right: {\nErrorCode,\nErrorText \n}
'        else success
'            oms -> backend : {Status, OrderNumber, Payment, SalesTax}
'            deactivate oms
'        end
'    end


|||
== EPCC ==
    backend -> epcc : EPCC: Update Order Details.
    activate epcc #lightblue
'    note left: {\n  BMI Order_Id, Omni_Token \n Offer Code, Source Code,\n Consents, Address(es)\n}
'    note left of epcc: Order Status: complete

    epcc -> backend : Success.
    deactivate epcc

'    group EPCC Backend Interaction Details
'        note right of backend: { Addresses, Consents, BMI Order_ID, Authorization }
'        backend -> epcc : EPCC: Update Order Details.
'        activate epcc #lightblue
'        group Responses  [error]
'            epcc -[#f07575]> backend: Error Updating Order
'            activate backend #f07575
''            backend --[#f07575]> backend: Continue Process.
'            deactivate backend
'        else success
'            epcc -> backend: Success.
'            deactivate epcc
'            activate backend #darkgreen
''            backend --[#darkgreen]> backend: Continue Process.
'            deactivate backend
'        end
'    end

    backend ->o browser : Success.
    deactivate backend
    browser -> browser : Order success page.
    deactivate browser

@enduml

---

@startuml
    'https://plantuml.com/sequence-diagram
    !include https://raw.githubusercontent.com/bschwarz/puml-themes/master/themes/bluegray/puml-theme-bluegray.puml
'!includeurl https://raw.githubusercontent.com/matthewjosephtaylor/plantuml-style/master/style.pu
'!include https://raw.githubusercontent.com/bschwarz/puml-themes/master/themes/superhero/puml-theme-superhero.puml
'
    'skinparam responseMessageBelowArrow true
    skinparam backgroundColor #FFFFFE
    skinparam ArrowColor #darkgreen
    skinparam SequenceGroupBodyBackGroundColor transparent

    actor Browser as browser #green
    box Netlify
'    box Netlify : <img:https://www.netlify.com/img/press/logos/full-logo-light.png{scale=0.1}>
        participant backend as "AWS\nƛ"
    end box
    box WorldPay
    box WorldPay: <img:https://www.salesforce.com/content/dam/web/en_us/www/images/commerce-cloud/partners/worldpay-logo-2.png>
        participant epro as "eProtect"
        participant cnp as "cnpApi"
    end box
    participant BMI as oms
    participant epcc as "EPCC"

    autonumber


|||
== Navigate to Checkout Form ==
    browser -> epcc: Automatically Create Cart and Add Offer Items to Cart.
    'note left of epcc: EPCC: Cart created.
    activate browser #lightgray
    activate epcc #lightblue
    epcc -> browser : {cart_reference_id}
    deactivate epcc


|||
    group EPCC Cart Interaction Details
        browser --> epcc : Create and Add Offer Items to Cart.
        activate epcc #lightblue
        group Responses  [error]
            epcc -[#f07575]> browser: Error Creating/Adding To Cart
        else success
            epcc -> browser: {cart_reference_id}
            deactivate epcc
        end
    end


|||
== Enter CC#, CVV into Checkout Form ==
    browser o-> epro : Tokenize PCI Data
    activate epro #black
    epro -> browser : {RegistrationId}
    note right #gray: RegistrationId is a long length, low-value token,\n MOD10+1 compliant, with no format preservation,\nand a 24 hour lifetime.
    deactivate epro

    group eProtect Details
        note right of browser: { cart_reference_id, CC#, CVV }
        browser -> epro : Tokenize PCI Data
        activate epro #black
        group Responses [error]
            epro -[#f07575]> browser : {response.code, response.message}
            note right #gray: Error Messages shown near iFrame fields.
        else success
            epro -> browser : {paypageRegistrationId, response.expMonth, response.expYear, response.type}
            deactivate epro
            note right #gray: paypageRegistrationId is a long length,\nlow-value token, MOD10+1 compliant,\nwith no format preservation, and a 24h life.
        end
    end


|||
== Click "Place Order" ==
    'browser -->o epcc : Set Shipping/Billing Information
    'note left of epcc: EPCC order status: processing
'    browser o-> backend : Place Order.

    group Place Order Details
       note right of browser: { Addresses, Consents, cart_reference_id, Authorization }

        browser -> backend : Place Order: <b>POST /.netlify/functions/placeOrder</b>
    activate backend #00ac99
        group Responses [error]
            backend -[#f07575]> browser: HTTP: <b>500</b> Error.
            note right #gray: Error Message\nError Code
        else success
            backend -> browser : HTTP: <b>201</b> Order Created.
deactivate backend
            note right #gray: Order Id
        end
    end

'
'   backend -> epcc : Convert Cart to Order.
'    'note  left of epcc: EPCC Order status: incomplete
'    activate epcc #lightblue
'    epcc -> backend : {Order Id}
'    deactivate epcc
'
'    group EPCC Order Create Details
'        backend --> epcc : Convert Cart to Order
'        activate epcc #lightblue
'        group Responses  [error]
'            epcc -[#f07575]> backend: Error Converting Cart to Order
'        else success
'            epcc -> backend: {Order Id}
'            deactivate epcc
'        end
'    end
'
'|||
'== Payment Authorization ==
'    backend -> cnp : WorldPay cnpApi: Authorize this order.
'    activate cnp #fceca2
'    cnp -> backend : {OmniToken, Authorization}
'    note right #gray:  High-value token, reusable.\nAuthorization good for 7-10days
'    deactivate cnp
'
'    group cnpApi Details
'    note right of backend: { RegistrationID, Address(es), CC Expiration, Amount }
'    backend -> cnp : WorldPay cnpApi: Authorize this order. (via OpenAccess)
'        group Responses [error]
'            activate cnp #fceca2
'            cnp -[#f07575]> backend : Payment Error {Error Code/Message?}
''            note right #gray: Error Code?
'        else success
'            cnp -> backend : {response, message, authCode, cnpToken}
''            note right: OmniToken, Authorization
'            deactivate cnp
'        end
'    end
'
'
'|||
'== Fulfillment ==
'    backend -> oms : BMI API: NEWORDER
'    activate oms #lightgreen
'    oms -> backend : {BMI OrderNumber}
'    deactivate oms
'
'    group BMI Details
'        note right of backend: { OmniToken, Address(es), OfferCode, KeyCode, Totals, Consents }
'        backend -> oms : Call BMI API: NEWORDER
'        group Responses [error]
'            activate oms #lightgreen
'            oms -[#f07575]> backend : {ErrorCode, ErrorText}
''            note right: {\nErrorCode,\nErrorText \n}
'        else success
'            oms -> backend : {Status, OrderNumber, Payment, SalesTax}
'            deactivate oms
'        end
'    end
'
'
'|||
'== EPCC ==
'    backend -> epcc : EPCC: Update Order Details.
'    activate epcc #lightblue
''    note left: {\n  BMI Order_Id, Omni_Token \n Offer Code, Source Code,\n Consents, Address(es)\n}
''    note left of epcc: Order Status: complete
'
'    epcc -> backend : Success.
'    deactivate epcc
'
'    group EPCC Backend Interaction Details
'        note right of backend: { Addresses, Consents, BMI Order_ID, Authorization }
'        backend -> epcc : EPCC: Update Order Details.
'        activate epcc #lightblue
'        group Responses  [error]
'            epcc -[#f07575]> backend: Error Updating Order
'            activate backend #f07575
''            backend --[#f07575]> backend: Continue Process.
'            deactivate backend
'        else success
'            epcc -> backend: Success.
'            deactivate epcc
'            activate backend #darkgreen
''            backend --[#darkgreen]> backend: Continue Process.
'            deactivate backend
'        end
'    end
'
'    backend ->o browser : Success.
'    deactivate backend
'    browser -> browser : Order success page.
'    deactivate browser

@enduml



